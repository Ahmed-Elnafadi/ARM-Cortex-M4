/********************************************************************************************************************************
 *  FILE DESCRIPTION
 *  -----------------------------------------------------------------------------------------------------------------------------
 *			File: SCC_Types.h
 *
 *          Module: -
 *
 *			
 *          Description: Definition of new Data types in system    
 *
 ******************************************************************************************************************************/
#ifndef	SCC_TYPES_H_
#define	SCC_TYPES_H_

/*******************************************************************************************************************************
 * INCLUDES
 ******************************************************************************************************************************/
#include "STD_TYPES.h"
 
/*******************************************************************************************************************************
 * GLOBAL CONSTANT MACROS
 ******************************************************************************************************************************/
 #define MAIN_OSCILL												1
 #define PRECISION_INTERNAL_OSCILLATOR			2
 #define PIOSC_DIV_4												3
 #define LFIOSC															4
 
 #define ENABLE															1
 #define DISABLE 														2
/*******************************************************************************************************************************
 * GLOBAL FUNCTION MACROS
 ******************************************************************************************************************************/
 
/*******************************************************************************************************************************
 * GLOBAL DATA TYPES AND STRUCTURES
 ******************************************************************************************************************************/
 typedef enum{
	 GPIO_A,
	 GPIO_B,
	 GPIO_C,
	 GPIO_D,
	 GPIO_E,
	 GPIO_F,
	 TIMER,
	 ADC,
	 WDT,
	 UART,
	 I2C,
	 CAN,
	 DMA 
 }Peripheral_t;
/*******************************************************************************************************************************
 * GLOBAL DATA PROTOTYPES
 ******************************************************************************************************************************/
 
/*******************************************************************************************************************************
 * GLOBAL FUNCTION PROTOTYPES
 ******************************************************************************************************************************/
 
/*******************************************************************************************************************************
 * \Syntax			: Static void SCC_PeripheralReady(Peripheral_t copy_Peripheral)
 * \Description     : Check peripheral clock is ready for access
 *  				  
 *
 * \Sync\Async      : Synchronous
 * \Reentrancy		: Non Reentrant
 * \Parameters (in) : Peripheral Name
 * \parameters (out): Ready, not Ready
 * \Return Value    : uint8_t
 *******************************************************************************************************************************/
static uint8_t SCC_PeripheralReady(Peripheral_t copy_Peripheral);
 
/*******************************************************************************************************************************
 * \Syntax			: Static void SCC_SetClockPeripheral(Peripheral_t copy_Peripheral, uint8_t copy_State)
 * \Description     : Set peripheral clock
 *  				  
 *
 * \Sync\Async      : Synchronous
 * \Reentrancy		: Non Reentrant
 * \Parameters (in) : Peripheral Name, State (Enable, Disable)
 * \parameters (out): None
 * \Return Value    : None
 *******************************************************************************************************************************/
static void SCC_SetClockPeripheral(Peripheral_t copy_Peripheral, uint8_t copy_State);

 
 #endif  /* SCC_TYPES_H_ */
 
/*******************************************************************************************************************************
 * END OF FILE: SCC_Types.h
 ******************************************************************************************************************************/